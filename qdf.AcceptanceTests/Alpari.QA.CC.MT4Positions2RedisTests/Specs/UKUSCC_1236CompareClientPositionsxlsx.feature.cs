// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Alpari.QA.CC.MT4Positions2RedisTests.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("UKUSCC_1236CompareClientPositionsXlsx")]
    [NUnit.Framework.CategoryAttribute("UKUSCC_1236")]
    public partial class UKUSCC_1236CompareClientPositionsXlsxFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UKUSCC_1236CompareClientPositionsxlsx.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "UKUSCC_1236CompareClientPositionsXlsx", "In order to find discrepancies in redis and ars open positions\r\nAs a CC tester\r\nI" +
                    " want to compare cc_sp_get_client_positions between cc@master and cc_uat@slave3", ProgrammingLanguage.CSharp, new string[] {
                        "UKUSCC_1236"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare C1 Client Positions")]
        public virtual void CompareC1ClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare C1 Client Positions", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table1.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKC01_3006_20141105_151028.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_AUKC01_6_20141105_151030.xlsx"});
#line 8
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table2.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 11
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare C2 Client Positions")]
        public virtual void CompareC2ClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare C2 Client Positions", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table3.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKC02_3046_20141105_151508.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_AUKC02_46_20141105_151452.xlsx"});
#line 16
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table4.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 19
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare B2B Client Positions")]
        public virtual void CompareB2BClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare B2B Client Positions", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table5.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKB2B1_3074_20141105_162851.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_AUKB2B1_74_20141105_162852.xlsx"});
#line 24
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table6.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 27
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare CBOJ Client Positions")]
        public virtual void CompareCBOJClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare CBOJ Client Positions", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table7.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKCBJ_3057_20141105_162555.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_cboj_57_20141105_162554.xlsx"});
#line 41
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table8.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 44
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare MT4AUKM01 Client Positions")]
        public virtual void CompareMT4AUKM01ClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare MT4AUKM01 Client Positions", ((string[])(null)));
#line 48
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table9.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKM01_3047_20141105_153940.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_aukm01_47_20141105_153940.xlsx"});
#line 49
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table10.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 52
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare MT4AUKM02 Client Positions")]
        public virtual void CompareMT4AUKM02ClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare MT4AUKM02 Client Positions", ((string[])(null)));
#line 56
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table11.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKM02_3048_20141105_154117.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_aukm02_48_20141105_154115.xlsx"});
#line 57
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table12.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 60
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare MT4AUKPO1 Client Positions")]
        public virtual void CompareMT4AUKPO1ClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare MT4AUKPO1 Client Positions", ((string[])(null)));
#line 64
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table13.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKP01_3049_20141105_161007.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_AUKP01_49_20141105_161005.xlsx"});
#line 65
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table14.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 68
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare MT4AUKMARKET1 Client Positions")]
        public virtual void CompareMT4AUKMARKET1ClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare MT4AUKMARKET1 Client Positions", ((string[])(null)));
#line 72
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table15.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKMARKET1_3089_20141105_163035.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_AUKMarket1_89_20141105_163055.xlsx"});
#line 73
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table15, "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table16.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 76
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare MT4AUKMARKETMENA Client Positions")]
        public virtual void CompareMT4AUKMARKETMENAClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare MT4AUKMARKETMENA Client Positions", ((string[])(null)));
#line 80
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table17.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKMARKETMENA_3090_20141105_165944.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_AUKMarketMENA_90_20141105_165944.xlsx"});
#line 81
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table17, "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table18.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 84
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare MT4AUKMARKETMENA2 Client Positions")]
        public virtual void CompareMT4AUKMARKETMENA2ClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare MT4AUKMARKETMENA2 Client Positions", ((string[])(null)));
#line 88
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table19.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKMARKETMENA_3090_20141105_172100.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_AUKMarketMENA_90_20141105_172104.xlsx"});
#line 89
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table19, "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table20.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 92
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Compare MT4AUKSB1 Client Positions")]
        public virtual void CompareMT4AUKSB1ClientPositions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare MT4AUKSB1 Client Positions", ((string[])(null)));
#line 96
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "RedisPositionsFile",
                        "ArsPositionsFile"});
            table21.AddRow(new string[] {
                        "H:\\Downloads\\Positions_Redis_MT4AUKSB1_3053_20141105_161250.xlsx",
                        "H:\\Downloads\\Positions_Database_ars_AUKSB1_53_20141105_161256.xlsx"});
#line 97
 testRunner.When("I compare cc redis and cc ars client position data from xlsx:-", ((string)(null)), table21, "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table22.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 100
 testRunner.Then("the redis positions should match the ars positions exactly:-", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
