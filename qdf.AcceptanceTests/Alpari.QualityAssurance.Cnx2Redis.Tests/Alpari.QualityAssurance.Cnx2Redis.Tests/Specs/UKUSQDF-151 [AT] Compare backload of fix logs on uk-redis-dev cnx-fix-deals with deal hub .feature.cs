// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Alpari.QualityAssurance.Cnx2Redis.Tests.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("UKUSQDF-151 [AT] load cnx-fix-deals")]
    [NUnit.Framework.CategoryAttribute("UKUSQDF_151")]
    [NUnit.Framework.CategoryAttribute("cnxHubTradeActivityImporter:Csv")]
    public partial class UKUSQDF_151ATLoadCnx_Fix_DealsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UKUSQDF-151 [AT] Compare backload of fix logs on uk-redis-dev cnx-fix-deals with deal hub .feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "UKUSQDF-151 [AT] load cnx-fix-deals", "In order to use cnxstp-pret-deals-all which have been loaded from file\r\nAs a QDF " +
                    "Analyst\r\nI want to know the data matches with cnx-hub data", ProgrammingLanguage.CSharp, new string[] {
                        "UKUSQDF_151",
                        "cnxHubTradeActivityImporter:Csv"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Login",
                        "Name"});
            table1.AddRow(new string[] {
                        "AUKUS2102",
                        "Lucror"});
            table1.AddRow(new string[] {
                        "AUKUS2089",
                        "Chase Capital"});
            table1.AddRow(new string[] {
                        "AUKUS2065",
                        "Leverate Financial"});
            table1.AddRow(new string[] {
                        "AUKUS2095",
                        "TradingServices"});
            table1.AddRow(new string[] {
                        "AUKUS2099",
                        "BostonPrime"});
            table1.AddRow(new string[] {
                        "AUKUS2106",
                        "Gedik"});
            table1.AddRow(new string[] {
                        "AUKUS2033",
                        "Forex Financial"});
            table1.AddRow(new string[] {
                        "AUKUS1004",
                        "Royal Forex Trading"});
            table1.AddRow(new string[] {
                        "AUKP2962",
                        "Accurate Investment"});
            table1.AddRow(new string[] {
                        "AUKUS2026",
                        "TTCM Traders Trust"});
            table1.AddRow(new string[] {
                        "AUKP3064",
                        "Fidus SAL"});
            table1.AddRow(new string[] {
                        "AUKP2848",
                        "Aganex"});
            table1.AddRow(new string[] {
                        "AUKUS2078",
                        "Scope"});
            table1.AddRow(new string[] {
                        "AUKP3156",
                        "Gerhardus"});
            table1.AddRow(new string[] {
                        "AUKP3399",
                        "Atef Abdulrahman Mohammed AlNuwaiser"});
            table1.AddRow(new string[] {
                        "AUKP3038",
                        "Arab International"});
            table1.AddRow(new string[] {
                        "AUKP1050",
                        "Bailey"});
            table1.AddRow(new string[] {
                        "AUKP3233",
                        "Mohammad Najmudeen"});
            table1.AddRow(new string[] {
                        "AUKP2193",
                        "Uros Frantar"});
            table1.AddRow(new string[] {
                        "AUKP3216",
                        "Javier Timerman"});
#line 8
testRunner.Given("I have this list of takers to load from cnx hub", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison 2013")]
        [NUnit.Framework.TestCaseAttribute("C:\\data\\AlpariUK_2013_01.csv", null)]
        [NUnit.Framework.TestCaseAttribute("C:\\data\\AlpariUK_2013_02.csv", null)]
        [NUnit.Framework.TestCaseAttribute("C:\\data\\AlpariUK_2013_03.csv", null)]
        [NUnit.Framework.TestCaseAttribute("C:\\data\\AlpariUK_2013_04.csv", null)]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparison2013(string report, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison 2013", exampleTags);
#line 31
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table2.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 32
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table2, "Given ");
#line 35
 testRunner.When(string.Format("I load cnx trade activities from \"{0}\" for the included logins", report), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table3.AddRow(new string[] {
                        "Comment"});
            table3.AddRow(new string[] {
                        "AccountGroup"});
            table3.AddRow(new string[] {
                        "Book"});
            table3.AddRow(new string[] {
                        "OrderId"});
            table3.AddRow(new string[] {
                        "State"});
#line 37
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table4.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 44
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Jan 2014 Pre Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonJan2014PreMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Jan 2014 Pre Midnight", ((string[])(null)));
#line 55
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table5.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 56
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table5, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table6.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140131.csv",
                        "01/01/2014  22:02:31",
                        "30/01/2014  23:59:59"});
#line 60
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table6, "When ");
#line 63
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table7.AddRow(new string[] {
                        "Comment"});
            table7.AddRow(new string[] {
                        "AccountGroup"});
            table7.AddRow(new string[] {
                        "Book"});
            table7.AddRow(new string[] {
                        "OrderId"});
            table7.AddRow(new string[] {
                        "State"});
#line 64
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table8.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 72
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Jan 2014 Post Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonJan2014PostMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Jan 2014 Post Midnight", ((string[])(null)));
#line 76
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table9.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 77
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table10.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140131.csv",
                        "31/01/2014  00:00:00",
                        "31/01/2014  21:53:02"});
#line 81
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table10, "When ");
#line 84
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table11.AddRow(new string[] {
                        "Comment"});
            table11.AddRow(new string[] {
                        "AccountGroup"});
            table11.AddRow(new string[] {
                        "Book"});
            table11.AddRow(new string[] {
                        "OrderId"});
            table11.AddRow(new string[] {
                        "State"});
#line 85
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table12.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 93
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Feb 2014 Pre Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonFeb2014PreMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Feb 2014 Pre Midnight", ((string[])(null)));
#line 97
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table13.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 98
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table14.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140228.csv",
                        "02/02/2014  22:03:35",
                        "27/02/2014  23:59:59"});
#line 102
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table14, "When ");
#line 105
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table15.AddRow(new string[] {
                        "Comment"});
            table15.AddRow(new string[] {
                        "AccountGroup"});
            table15.AddRow(new string[] {
                        "Book"});
            table15.AddRow(new string[] {
                        "OrderId"});
            table15.AddRow(new string[] {
                        "State"});
#line 106
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table16.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 114
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Feb 2014 Post Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonFeb2014PostMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Feb 2014 Post Midnight", ((string[])(null)));
#line 118
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table17.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 119
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table17, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table18.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140228.csv",
                        "28/02/2014  00:00:00",
                        "28/02/2014  21:57:51"});
#line 123
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table18, "When ");
#line 126
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table19.AddRow(new string[] {
                        "Comment"});
            table19.AddRow(new string[] {
                        "AccountGroup"});
            table19.AddRow(new string[] {
                        "Book"});
            table19.AddRow(new string[] {
                        "OrderId"});
            table19.AddRow(new string[] {
                        "State"});
#line 127
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table20.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 135
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Mar 2014 Pre Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonMar2014PreMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Mar 2014 Pre Midnight", ((string[])(null)));
#line 140
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table21.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 141
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table21, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table22.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140331.csv",
                        "02/03/2014  22:03:03",
                        "31/03/2014  23:59:59"});
#line 145
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table22, "When ");
#line 148
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table23.AddRow(new string[] {
                        "Comment"});
            table23.AddRow(new string[] {
                        "AccountGroup"});
            table23.AddRow(new string[] {
                        "Book"});
            table23.AddRow(new string[] {
                        "OrderId"});
            table23.AddRow(new string[] {
                        "State"});
#line 149
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table24.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 157
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Mar 2014 Post Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonMar2014PostMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Mar 2014 Post Midnight", ((string[])(null)));
#line 161
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table25.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 162
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table25, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table26.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140331.csv",
                        "31/03/2014  00:00:00",
                        "31/03/2014  20:57:33"});
#line 166
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table26, "When ");
#line 169
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table27.AddRow(new string[] {
                        "Comment"});
            table27.AddRow(new string[] {
                        "AccountGroup"});
            table27.AddRow(new string[] {
                        "Book"});
            table27.AddRow(new string[] {
                        "OrderId"});
            table27.AddRow(new string[] {
                        "State"});
#line 170
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table28.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 178
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Apr 2014 Pre Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonApr2014PreMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Apr 2014 Pre Midnight", ((string[])(null)));
#line 183
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table29.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 184
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table29, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table30.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140430.csv",
                        "01/04/2014  21:05:03",
                        "30/04/2014  23:59:59"});
#line 188
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table30, "When ");
#line 191
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table31.AddRow(new string[] {
                        "Comment"});
            table31.AddRow(new string[] {
                        "AccountGroup"});
            table31.AddRow(new string[] {
                        "Book"});
            table31.AddRow(new string[] {
                        "OrderId"});
            table31.AddRow(new string[] {
                        "State"});
#line 192
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table32.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 200
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Apr 2014 Post Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonApr2014PostMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Apr 2014 Post Midnight", ((string[])(null)));
#line 204
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table33.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 205
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table33, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table34.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140430.csv",
                        "30/04/2014  00:00:00",
                        "30/04/2014  20:56:26"});
#line 209
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table34, "When ");
#line 212
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table35.AddRow(new string[] {
                        "Comment"});
            table35.AddRow(new string[] {
                        "AccountGroup"});
            table35.AddRow(new string[] {
                        "Book"});
            table35.AddRow(new string[] {
                        "OrderId"});
            table35.AddRow(new string[] {
                        "State"});
#line 213
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table36.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 221
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison May 2014 Pre Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonMay2014PreMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison May 2014 Pre Midnight", ((string[])(null)));
#line 226
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table37.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 227
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table37, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table38.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140531.csv",
                        "30/04/2014  21:06:33",
                        "29/05/2014  23:59:59"});
#line 231
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table38, "When ");
#line 234
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table39.AddRow(new string[] {
                        "Comment"});
            table39.AddRow(new string[] {
                        "AccountGroup"});
            table39.AddRow(new string[] {
                        "Book"});
            table39.AddRow(new string[] {
                        "OrderId"});
            table39.AddRow(new string[] {
                        "State"});
#line 235
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table40.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 243
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table40, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison May 2014 Post Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonMay2014PostMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison May 2014 Post Midnight", ((string[])(null)));
#line 247
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table41.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 248
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table41, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table42.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140531.csv",
                        "30/05/2014  00:00:00",
                        "30/05/2014  20:57:22"});
#line 252
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table42, "When ");
#line 255
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table43.AddRow(new string[] {
                        "Comment"});
            table43.AddRow(new string[] {
                        "AccountGroup"});
            table43.AddRow(new string[] {
                        "Book"});
            table43.AddRow(new string[] {
                        "OrderId"});
            table43.AddRow(new string[] {
                        "State"});
#line 256
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table44.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 264
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table44, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Jun 2014 Pre Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonJun2014PreMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Jun 2014 Pre Midnight", ((string[])(null)));
#line 269
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table45.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 270
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table45, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table46.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140630.csv",
                        "01/06/2014  21:04:12",
                        "30/06/2014  23:59:59"});
#line 274
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table46, "When ");
#line 277
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table47.AddRow(new string[] {
                        "Comment"});
            table47.AddRow(new string[] {
                        "AccountGroup"});
            table47.AddRow(new string[] {
                        "Book"});
            table47.AddRow(new string[] {
                        "OrderId"});
            table47.AddRow(new string[] {
                        "State"});
#line 278
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table47, "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table48.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 286
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Jun 2014 Post Midnight")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonJun2014PostMidnight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Jun 2014 Post Midnight", ((string[])(null)));
#line 290
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table49.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 291
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table49, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileNamePath",
                        "ConvertedStartTime",
                        "ConvertedEndTime"});
            table50.AddRow(new string[] {
                        "C:\\data\\Alpari UK_TradeActivity_20140630.csv",
                        "30/06/2014  00:00:00",
                        "30/06/2014  20:52:42"});
#line 295
 testRunner.When("I load cnx trade activities with the side reversed for the included logins from", ((string)(null)), table50, "When ");
#line 298
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table51.AddRow(new string[] {
                        "Comment"});
            table51.AddRow(new string[] {
                        "AccountGroup"});
            table51.AddRow(new string[] {
                        "Book"});
            table51.AddRow(new string[] {
                        "OrderId"});
            table51.AddRow(new string[] {
                        "State"});
#line 299
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table52.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 307
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table52, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Nov 2011")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonNov2011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Nov 2011", ((string[])(null)));
#line 312
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table53.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 313
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table53, "Given ");
#line 316
 testRunner.When("I load cnx trade activities from \"C:\\data\\Alpari UK_TradeActivity_20111130.csv\" a" +
                    "nd reverse the deal side", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 317
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table54.AddRow(new string[] {
                        "Comment"});
            table54.AddRow(new string[] {
                        "AccountGroup"});
            table54.AddRow(new string[] {
                        "Book"});
            table54.AddRow(new string[] {
                        "OrderId"});
            table54.AddRow(new string[] {
                        "State"});
#line 318
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table55.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 326
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table55, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check qdf cnx-deals and cnx hub deals and do comparison Dec 2011")]
        public virtual void CheckQdfCnx_DealsAndCnxHubDealsAndDoComparisonDec2011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check qdf cnx-deals and cnx hub deals and do comparison Dec 2011", ((string[])(null)));
#line 330
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "DealSource",
                        "DealType"});
            table56.AddRow(new string[] {
                        "cnxstp-pret-deals-all",
                        "deal"});
#line 331
 testRunner.Given("I have the following search criteria for qdf deals", ((string)(null)), table56, "Given ");
#line 334
 testRunner.When("I load cnx trade activities from \"C:\\data\\Alpari UK_TradeActivity_20111231.csv\" a" +
                    "nd reverse the deal side", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 335
  testRunner.And("I retrieve the qdf deal data filtered by cnx hub start and end times and by inclu" +
                    "ded logins", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExcludedFields"});
            table57.AddRow(new string[] {
                        "Comment"});
            table57.AddRow(new string[] {
                        "AccountGroup"});
            table57.AddRow(new string[] {
                        "Book"});
            table57.AddRow(new string[] {
                        "OrderId"});
            table57.AddRow(new string[] {
                        "State"});
#line 336
  testRunner.And("I compare the cnx hub trade deals with the qdf deal data excluding these fields:", ((string)(null)), table57, "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "ExportType",
                        "Overwrite"});
            table58.AddRow(new string[] {
                        "DataTableToCsv",
                        "true"});
#line 344
 testRunner.Then("the cnx hub trade deals should match the qdf deal data exactly:-", ((string)(null)), table58, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
