// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Alpari.QA.CC.MT4Positions2RedisTests.Specs.SelfTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("UKUSCC_1331_ProvideExactSnapshotTimes")]
    [NUnit.Framework.CategoryAttribute("UKUSCC_1331")]
    public partial class UKUSCC_1331_ProvideExactSnapshotTimesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UKUSCC_1331_ProvideExactSnapshotTimes.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "UKUSCC_1331_ProvideExactSnapshotTimes", "In order to aid defect investigation\r\nAs a CC Developer\r\nI want to get exact cc s" +
                    "napshot times", ProgrammingLanguage.CSharp, new string[] {
                        "UKUSCC_1331"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Connection1",
                        "Connection2"});
            table1.AddRow(new string[] {
                        "CcMaster",
                        "CcMaster"});
#line 9
 testRunner.Given("I have the following connections to cc:-", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Do JPN Comparison")]
        public virtual void DoJPNComparison()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do JPN Comparison", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Server1",
                        "Server2",
                        "Database1",
                        "Database2",
                        "Connection1",
                        "Connection2",
                        "Book",
                        "Section",
                        "Symbol",
                        "StartTime",
                        "EndTime"});
            table2.AddRow(new string[] {
                        "JPN",
                        "JPN",
                        "cc_next",
                        "cc",
                        "CcMaster",
                        "CcMaster",
                        "A",
                        "Default",
                        "AUDCAD",
                        "2014/12/12 10:30:00",
                        "2014/12/15 09:00:00"});
#line 14
 testRunner.When("I get cc redis and cc ars position data across db connections and databases for t" +
                    "hese sets of snapshot parameters:-", ((string)(null)), table2, "When ");
#line 18
  testRunner.Then("the snapshot comparison list contains fields for actual snapshot times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Do ADS CFD Comparison")]
        public virtual void DoADSCFDComparison()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Do ADS CFD Comparison", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Server1",
                        "Server2",
                        "Database1",
                        "Database2",
                        "Connection1",
                        "Connection2",
                        "Book",
                        "Section",
                        "Symbol",
                        "StartTime",
                        "EndTime"});
            table3.AddRow(new string[] {
                        "ADS CFD",
                        "ADS CFD",
                        "cc_next",
                        "cc",
                        "CcMaster",
                        "CcMaster",
                        "B",
                        "Default",
                        "CL.F5",
                        "2014/12/15 09:00:00",
                        "2014/12/16 12:45:00"});
#line 21
 testRunner.When("I get cc redis and cc ars position data across db connections and databases for t" +
                    "hese sets of snapshot parameters:-", ((string)(null)), table3, "When ");
#line 25
 testRunner.Then("the snapshot comparison list contains fields for actual snapshot times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
